name: Build

on:
  push:
    branches: [main]
  pull_request: {}
  merge_group: {}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux x86_64 MinGW
            prep-cmd: sudo apt-get update && sudo apt-get install -y cmake gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 pkg-config-mingw-w64-x86-64 libz-mingw-w64-dev gettext dpkg-dev wget git sudo smpq && sudo rm /usr/x86_64-w64-mingw32/lib/libz.dll.a && sudo Packaging/windows/mingw-prep64.sh
            build-cmd: cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_TESTING=OFF -DCPACK=ON -DCMAKE_TOOLCHAIN_FILE=../CMake/platforms/mingwcc64.toolchain.cmake -DDEVILUTIONX_SYSTEM_BZIP2=OFF -DDEVILUTIONX_STATIC_LIBSODIUM=ON -DDISCORD_INTEGRATION=OFF -DDISABLE_LTO=ON
            publish-as: win64
          - name: Linux i686 MinGW
            prep-cmd: sudo apt-get update && sudo apt install -y cmake gcc-mingw-w64-i686 g++-mingw-w64-i686 pkg-config-mingw-w64-i686 libz-mingw-w64-dev gettext dpkg-dev wget git sudo smpq && sudo rm /usr/i686-w64-mingw32/lib/libz.dll.a && sudo Packaging/windows/mingw-prep.sh
            build-cmd: cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_TESTING=OFF -DCPACK=ON -DCMAKE_TOOLCHAIN_FILE=../CMake/platforms/mingwcc.toolchain.cmake -DDEVILUTIONX_SYSTEM_BZIP2=OFF -DDEVILUTIONX_STATIC_LIBSODIUM=ON -DDISCORD_INTEGRATION=OFF -DDISABLE_LTO=ON
            publish-as: win32
          - name: Linux x86_64 GCC
            prep-cmd: sudo apt-get update
            build-cmd: cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=/usr -DCPACK=ON -DDISCORD_INTEGRATION=OFF -DBUILD_TESTING=OFF -DDEVILUTIONX_SYSTEM_LIBFMT=OFF -DDEVILUTIONX_SYSTEM_SIMPLEINI=OFF -DDISABLE_LTO=ON
            publish-as: linux
    name: ${{matrix.name}}
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        repository: diasurgical/devilutionX
        path: devilutionX
        fetch-depth: 0

    - name: Create Build Environment
      shell: bash
      run: |
        cd devilutionX
        ${{matrix.build-prep}}
        ${{matrix.build-cmd}}
        cmake --build build -j $(nproc) --target package
        mkdir -p ./upload
        cp -a ./build/_deps/libzt-build/lib ./upload/
        cp -a ./build/_deps/libzt-src/include ./upload/
    - uses: actions/upload-artifact@v2
      with:
        name: libzt-${{matrix.publish-as}}
        path: ./devilutionX/upload
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
